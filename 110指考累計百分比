import sys
sys.modules[__name__].__dict__.clear()

import numpy as np
import pandas as pd

df1 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(1)國_英_數甲")
df2 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(2)國_英_數乙")
df3 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(3)國_英_生")
df4 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(4)國_英_化")
df5 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(5)國_英_公")
df6 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(6)國_英_歷")
df7 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(7)國_英_數甲_物")
df8 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(8)國_英_數甲_生")
df9 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(9)國_英_數甲_化")
df10 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(10)國_英_數乙_公")
df11 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(11)國_英_化_生")
df12 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(12)國_英_數甲_物_化")
df13 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(13)國_英_數甲_化_生")
df14 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(14)國_英_數乙_歷_地")
df15 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(15)國_英_數乙_歷_公")
df16 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(16)國_英_數乙_化_生")
df17 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(17)英_數甲_物")
df18 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(18)英_數甲_物_化")
df19 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\110考試分發考生成績_累計人數-一般生.xlsx", sheet_name="(19)英_數甲_化_生")

df1["考科"] = "國、英、數甲"
df2["考科"] = "國、英、數乙"
df3["考科"] = "國、英、生"
df4["考科"] = "國、英、化"
df5["考科"] = "國、英、公"
df6["考科"] = "國、英、歷"
df7["考科"] = "國、英、數甲、物"
df8["考科"] = "國、英、數甲、生"
df9["考科"] = "國、英、數甲、化"
df10["考科"] = "國、英、數乙、公"
df11["考科"] = "國、英、化、生"
df12["考科"] = "國、英、數甲、物、化"
df13["考科"] = "國、英、數甲、化、生"
df14["考科"] = "國、英、數乙、歷、地"
df15["考科"] = "國、英、數乙、歷、公"
df16["考科"] = "國、英、數乙、化、生"
df17["考科"] = "英、數甲、物"
df18["考科"] = "英、數甲、物、化"
df19["考科"] = "英、數甲、化、生"

frame = [df1, df2,df3, df4, df5, df6, df7, df8, df9, df10,df11, df12,df13, df14, df15, df16, df17, df18, df19]
result = pd.concat(frame)
result.to_excel (r'D:\Users\Felix\Desktop\WFH\110指考各系組合分數區間合併.xlsx', index = False, header=True)

#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
df = pd.read_excel(r'D:\Users\Felix\Desktop\WFH\110考試分發考生成績-一般生1.xlsx')

df['總分'] = np.where(df['錄取學系中文名稱'] == '中國文學系', df['指考國文'] + df['指考英文']+ df['指考歷史'],
            np.where(df['錄取學系中文名稱'] == '外國語文學系', df['指考國文'] + df['指考英文']+ df['指考歷史'],
            np.where(df['錄取學系中文名稱'] == '歷史學系', df['指考國文'] + df['指考英文']+ df['指考歷史'],
            np.where(df['錄取學系中文名稱'] == '日本語言文化學系', df['指考國文'] + df['指考英文']+ df['指考歷史'],
            np.where(df['錄取學系中文名稱'] == '哲學系', df['指考國文'] + df['指考英文']+ df['指考歷史']+ df['指考數學乙']+ df['指考公民與社會'],
            np.where(df['錄取學系中文名稱'] == '應用物理學系(A組)', df['指考國文'] + df['指考英文']+ df['指考數學甲'],
            np.where(df['錄取學系中文名稱'] == '應用物理學系(B組)', df['指考國文'] + df['指考英文']+ df['指考數學乙'],
            np.where(df['錄取學系中文名稱'] == '化學系化學組', df['指考物理'] + df['指考化學']+ df['指考英文']+ df['指考數學甲'],
            np.where(df['錄取學系中文名稱'] == '化學系化學生物組(A組)', df['指考物理'] + df['指考化學']+ df['指考英文']+ df['指考數學甲'],
            np.where(df['錄取學系中文名稱'] == '化學系化學生物組(B組)', df['指考生物'] + df['指考化學']+ df['指考英文']+ df['指考數學甲'],
            np.where(df['錄取學系中文名稱'] == '生命科學系生物醫學組', df['指考生物'] + df['指考化學']+  df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '生命科學系生態暨生物多樣性組', df['指考生物'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '應用數學系(A組)', df['指考數學甲'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '應用數學系(B組)', df['指考數學乙'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '化學工程與材料工程學系(製程及能源工程組)', df['指考數學甲'] + df['指考化學'] + df['指考英文']+df['指考物理'],
            np.where(df['錄取學系中文名稱'] == '化學工程與材料工程學系(材料工程組)', df['指考數學甲'] + df['指考國文'] + df['指考英文']+df['指考物理']+ df['指考化學'],
            np.where(df['錄取學系中文名稱'] == '化學工程與材料工程學系(生化工程組)', df['指考數學甲'] + df['指考國文'] + df['指考英文']+df['指考生物']+ df['指考化學'],
            np.where(df['錄取學系中文名稱'] == '工業工程與經營資訊學系(智慧設計與生產組)', df['指考數學甲'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '工業工程與經營資訊學系(智慧經營與管理組)', df['指考數學乙'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '環境科學與工程學系(自然A組)', df['指考數學甲'] + df['指考國文'] + df['指考英文']+ df['指考化學'],
            np.where(df['錄取學系中文名稱'] == '環境科學與工程學系(自然B組)', df['指考數學甲'] + df['指考國文'] + df['指考英文']+ df['指考生物'],
            np.where(df['錄取學系中文名稱'] == '資訊工程學系(資電工程組)', df['指考數學甲'] + df['指考物理'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '資訊工程學系(人工智慧組)', df['指考數學甲'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '資訊工程學系(軟體工程組)', df['指考數學乙'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '電機工程學系', df['指考數學甲'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '企業管理學系', df['指考數學乙'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '國際經營與貿易學系', df['指考數學乙'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '會計學系', df['指考數學乙'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '財務金融學系', df['指考數學乙'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '統計學系(巨量資料管理組)', df['指考數學甲'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '統計學系(決策管理組)', df['指考數學乙'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '資訊管理學系(物聯網與大數據應用組)', df['指考數學乙'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '資訊管理學系(數位行銷與電子商務應用組)', df['指考數學乙'] + df['指考國文'] + df['指考英文']+ df['指考公民與社會'],
            np.where(df['錄取學系中文名稱'] == '經濟學系一般經濟組', df['指考數學乙'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '經濟學系產業經濟組', df['指考數學乙'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '政治學系政治理論組', df['指考公民與社會'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '政治學系國際關係組', df['指考公民與社會'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '行政管理暨政策學系', df['指考公民與社會'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '社會學系', df['指考公民與社會'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '社會工作學系', df['指考公民與社會'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '畜產與生物科技學系(A組)', df['指考生物'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '畜產與生物科技學系(B組)', df['指考化學'] + df['指考國文'] + df['指考英文'],
            np.where(df['錄取學系中文名稱'] == '食品科學系(A組)', df['指考化學']+df['指考生物'] + df['指考國文'] + df['指考英文']+df['指考數學甲'] ,
            np.where(df['錄取學系中文名稱'] == '食品科學系(B組)', df['指考化學']+df['指考生物'] + df['指考國文'] + df['指考英文']+df['指考數學乙'] ,
            np.where(df['錄取學系中文名稱'] == '餐旅管理學系', df['指考歷史']+df['指考地理'] + df['指考國文'] + df['指考英文']+df['指考數學乙'] ,
            np.where(df['錄取學系中文名稱'] == '建築學系',  df['指考化學']+df['指考物理'] + df['指考國文'] + df['指考英文']+df['指考數學甲'] ,
            np.where(df['錄取學系中文名稱'] == '工業設計學系',  df['指考物理'] + df['指考國文'] + df['指考英文']+df['指考數學甲'] ,
            np.where(df['錄取學系中文名稱'] == '高齡健康與運動科學學士學位學程',  df['指考國文'] + df['指考英文']+df['指考數學乙'] ,
            np.where(df['錄取學系中文名稱'] == '景觀學系',  df['指考國文'] + df['指考英文']+df['指考生物'] ,
            np.where(df['錄取學系中文名稱'] == '法律學系',  df['指考國文'] + df['指考英文']+df['指考數學乙']+df['指考歷史']+ df['指考公民與社會'] ,
            np.where(df['錄取學系中文名稱'] == '國際學院國際經營管理學位學程',  df['指考國文'] + df['指考英文']+df['指考數學乙'] ,
            np.where(df['錄取學系中文名稱'] == '永續科學與工程學士學位學程',  df['指考化學'] + df['指考英文']+df['指考數學甲']+df['指考生物'] ,
                    10000000))))))))))))))))))))))))))))))))))))))))))))))))))))

df.to_excel (r"D:\Users\Felix\Desktop\WFH\df指考狀況110.xlsx", index = False, header=True)


#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#---------------------------------------------- 增加一欄位：各科系之考科，再併成同dataframe ---------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

df_110指考成績 = pd.read_excel(r"D:\Users\Felix\Desktop\WFH\df指考狀況110.xlsx")

b1_4科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['化學系化學生物組(B組)', '永續科學與工程學士學位學程','國際學院國際經營管理學位學程'])]
b2_4科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['化學工程與材料工程學系(製程及能源工程組)', '化學系化學生物組(A組)','化學系化學組'])]
b3_4科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['生命科學系生物醫學組'])]
b4_4科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['資訊管理學系(數位行銷與電子商務應用組)'])]
b5_4科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['環境科學與工程學系(自然A組)'])]
b6_4科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['環境科學與工程學系(自然B組)'])]
b7_4科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['工業設計學系'])]

a1_3科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['資訊工程學系(資電工程組)'])]
a2_3科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['行政管理暨政策學系', '社會工作學系', '社會學系','政治學系政治理論組', '政治學系國際關係組'])]
a3_3科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['畜產與生物科技學系(B組)'])]
a4_3科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['生命科學系生態暨生物多樣性組', '畜產與生物科技學系(A組)', '景觀學系'])]
a5_3科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['工業工程與經營資訊學系(智慧經營與管理組)', '企業管理學系', '財務金融學系', '高齡健康與運動科學學士學位學程', '國際經營與貿易學系', '統計學系(決策管理組)', '會計學系', '經濟學系一般經濟組', '經濟學系產業經濟組', '資訊工程學系(軟體工程組)', '資訊管理學系(物聯網與大數據應用組)', '應用物理學系(B組)', '應用數學系(B組)'])]
a6_3科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['工業工程與經營資訊學系(智慧設計與生產組)', '統計學系(巨量資料管理組)', '資訊工程學系(人工智慧組)', '電機工程學系', '應用物理學系(A組)', '應用數學系(A組)'])]
a7_3科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['中國文學系', '日本語言文化學系', '外國語文學系', '歷史學系'])]

c1_5科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['食品科學系(B組)'])]
c2_5科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['法律學系', '哲學系'])]
c3_5科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['餐旅管理學系'])]
c4_5科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['化學工程與材料工程學系(生化工程組)', '食品科學系(A組)'])]
c5_5科= df_110指考成績[df_110指考成績['錄取學系中文名稱'].isin(['化學工程與材料工程學系(材料工程組)', '建築學系'])]

b1_4科["考科"] = "英、數甲、化、生"
b2_4科["考科"] = "英、數甲、物、化"
b3_4科["考科"] = "國、英、化、生"
b4_4科["考科"] = "國、英、數乙、公"
b5_4科["考科"] = "國、英、數甲、化"
b6_4科["考科"] = "國、英、數甲、生"
b7_4科["考科"] = "國、英、數甲、物"

a1_3科["考科"] = "英、數甲、物"
a2_3科["考科"] = "國、英、公"
a3_3科["考科"] = "國、英、化"
a4_3科["考科"] = "國、英、生"
a5_3科["考科"] = "國、英、數乙"
a6_3科["考科"] = "國、英、數甲"
a7_3科["考科"] = "國、英、歷"

c1_5科["考科"] = "國、英、數乙、化、生"
c2_5科["考科"] = "國、英、數乙、歷、公"
c3_5科["考科"] = "國、英、數乙、歷、地"
c4_5科["考科"] = "國、英、數甲、化、生"
c5_5科["考科"] = "國、英、數甲、物、化"

frame_a = [a1_3科,a2_3科,a3_3科,a4_3科,a5_3科,a6_3科,a7_3科]
frame_b = [b1_4科,b2_4科,b3_4科,b4_4科,b5_4科,b6_4科,b7_4科]
frame_c = [c1_5科,c2_5科,c3_5科,c4_5科,c5_5科]

result_a = pd.concat(frame_a)
result_b = pd.concat(frame_b)
result_c = pd.concat(frame_c)
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-------------------------------------指考總分換算bins(分數區間) 須同步修正指考選3科-選4科-選5科之組合 ------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#----------選3科----------------------------------------------------------------------
bins = np.arange(0,300,3)
bins2 = np.arange(3.01,300,3)
bins3 = np.insert(bins2,0,0)

bins4 = np.concatenate((bins, bins3))

list1 = bins.tolist()
list2 = bins3.tolist()
result = [None]*(len(list1)+len(list2))
result[::2] = list1
result[1::2] = list2
result
del result[0]

bin_final = np.array(result)
labels = ['-'.join(map(str,(x,y))) for x, y in zip(bin_final[:-1], bin_final[1:])]
result_a['bins'] = pd.cut(result_a['總分'], bins = bin_final, labels=labels)

#----------選4科----------------------------------------------------------------------
bins_4科 = np.arange(0,400,4)
bins2_4科 = np.arange(4.01,400,4)
bins3_4科 = np.insert(bins2_4科,0,0)

bins4_4科 = np.concatenate((bins_4科, bins3_4科))

list1_4科 = bins_4科.tolist()
list2_4科 = bins3_4科.tolist()
result_4科 = [None]*(len(list1_4科)+len(list2_4科))
result_4科[::2] = list1_4科
result_4科[1::2] = list2_4科
result_4科
del result_4科[0]

bin_final_4科 = np.array(result_4科)
labels_4科 = ['-'.join(map(str,(x_4科,y_4科))) for x_4科, y_4科 in zip(bin_final_4科[:-1], bin_final_4科[1:])]
result_b['bins'] = pd.cut(result_b['總分'], bins = bin_final_4科, labels=labels_4科)

#----------選5科----------------------------------------------------------------------
bins_5科 = np.arange(0,500,5)
bins2_5科 = np.arange(5.01,500,5)
bins3_5科 = np.insert(bins2_5科,0,0)

bins4_5科 = np.concatenate((bins_5科, bins3_5科))

list1_5科 = bins_5科.tolist()
list2_5科 = bins3_5科.tolist()
result_5科 = [None]*(len(list1_5科)+len(list2_5科))
result_5科[::2] = list1_5科
result_5科[1::2] = list2_5科
result_5科
del result_5科[0]

bin_final_5科 = np.array(result_5科)
labels_5科 = ['-'.join(map(str,(x_5科,y_5科))) for x_5科, y_5科 in zip(bin_final_5科[:-1], bin_final_5科[1:])]
result_c['bins'] = pd.cut(result_c['總分'], bins = bin_final_5科, labels=labels_5科)

result_a['bins'] = result_a['bins'].str[:-2]
result_b['bins'] = result_b['bins'].str[:-2]
result_c['bins'] = result_c['bins'].str[:-2]

#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#----------------- 指考中心給的分數區間 merge考科跟bins/分數區間 換算累計百分比 -----------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
filtered_df = pd.read_excel(r'D:\Users\Felix\Desktop\WFH\110指考各系組合分數區間合併.xlsx')
#----------3科----------
filtered_df1_3科 = pd.merge(result_a,filtered_df,left_on=["考科","bins"], right_on=["考科","分數區間"])
filtered_df1_3科["累計百分比"] = filtered_df1_3科["累計百分比"]*100
filtered_df2_3科 = filtered_df1_3科 [["錄取學系中文名稱","bins","考科","累計百分比"]]
#----------4科----------
filtered_df1_4科 = pd.merge(result_b,filtered_df,left_on=["考科","bins"], right_on=["考科","分數區間"])
filtered_df1_4科["累計百分比"] = filtered_df1_4科["累計百分比"]*100
filtered_df2_4科 = filtered_df1_4科 [["錄取學系中文名稱","bins","考科","累計百分比"]]
#----------5科----------
filtered_df1_5科 = pd.merge(result_c,filtered_df,left_on=["考科","bins"], right_on=["考科","分數區間"])
filtered_df1_5科["累計百分比"] = filtered_df1_5科["累計百分比"]*100
filtered_df2_5科 = filtered_df1_5科 [["錄取學系中文名稱","bins","考科","累計百分比"]]

#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#--------------------------------------------- 畫圖 -----------------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
out_path = r'D:\Users\Felix\Desktop\WFH'

from scipy import stats
from scipy.stats import norm
import matplotlib.pyplot as plt
from matplotlib.font_manager import FontProperties
plt.rcParams['font.sans-serif'] = ['Microsoft JhengHei']
plt.rcParams['axes.unicode_minus'] = False
dept = list(set(filtered_df2_3科["錄取學系中文名稱"])) #改filtered_df2_ 3 4 5科(1處)
plt.ioff()

for i in range(0, len(dept)):
    sub_data = filtered_df2_3科[filtered_df2_3科["錄取學系中文名稱"] == dept[i]] #改filtered_df2_ 3 4 5科(2處)
    plt.figure(figsize=(18, 6))  # 設定畫布大小
    ax1 = plt.subplot (1, 1, 1)
    plt.title(dept[i] + "直方圖 \n ", fontsize=18)

    n, bins, patches = ax1.hist(sub_data["累計百分比"], bins=20, range=[0, 100], edgecolor='black')
    for x, y in enumerate (n):
        ax1.text(x * 5 + 2.5, int (y / 2) + 0.5, int (y), ha='center')
    ax1.set_xlabel('110累計百分比分布', fontsize=14)  # 設定x軸名稱
    ax1.set_ylabel('人數', rotation=0, labelpad=10, fontsize=14)  # 設定y軸名稱
    ax1.set_xticks(np.arange (0, 105, 5))  # 設定x軸刻度
    plt.savefig(out_path+"/plot_3/"+dept[i]+".png") #改plot_3 plot_4 plot_5(1處)


#----------------匯出敘述統計表格-----------------------------------------------------------------------------------------------------------------------------------------
frame_filtered_df = [filtered_df2_3科,filtered_df2_4科,filtered_df2_5科]
result_frame_filtered_df = pd.concat(frame_filtered_df)
resultt = result_frame_filtered_df.groupby('錄取學系中文名稱').agg({'累計百分比': ['max', 'min','mean', 'std']})
print(resultt)

resultt.to_excel (r"D:\Users\Felix\Desktop\110採計科目百分比.xlsx")


